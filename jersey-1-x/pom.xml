<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.fasterxml.jackson.jaxrs</groupId>
        <artifactId>jackson-jaxrs-providers-compat-tests</artifactId>
        <version>2.9.0-SNAPSHOT</version>
    </parent>
    <artifactId>jackson-jaxrs-json-provider-compat-tests-jersey-1-x</artifactId>
    <name>Jackson-JAXRS-1.x-compat-tests</name>
    <packaging>bundle</packaging>
    <description>Jackson JAX-RS providers compatibility tests for JaxRS 1.x and Jersey 1.x</description>

    <properties>
        <!--  Need Jersey+Jetty for testing -->
        <version.jersey>1.19.2</version.jersey>
        <version.jetty>9.2.13.v20150730</version.jetty>

        <javax.ws.rs.version>1.1.1</javax.ws.rs.version>

        <!-- Generate PackageVersion.java into this directory. -->
        <packageVersion.dir>com/fasterxml/jackson/jaxrs/compatibility</packageVersion.dir>
        <packageVersion.package>${project.groupId}.compatibility</packageVersion.package>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-base</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-json-provider</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-jaxb-annotations</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- and we need JAX-RS annotations for testing as well; but usually provided
  by container (and app should definitely have direct dep too, when using annotations)
   -->
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>jsr311-api</artifactId>
            <version>${javax.ws.rs.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- tests require JAX-RS impl; otherwise components fail to load
                    (some oddity with API classes; should NOT be needed...)

                    NOTE: use 1.2 as that's JDK 1.5; later (1.8) versions need JDK 1.6
                  -->
        <dependency> <!-- all components use junit for testing -->
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-server</artifactId>
            <version>${version.jetty}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-servlet</artifactId>
            <version>${version.jetty}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-server</artifactId>
            <version>${version.jersey}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-servlet</artifactId>
            <version>${version.jersey}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-client</artifactId>
            <version>${version.jersey}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <!-- Inherited from oss-base. Generate PackageVersion.java.-->
                <groupId>com.google.code.maven-replacer-plugin</groupId>
                <artifactId>replacer</artifactId>
                <executions>
                    <execution>
                        <id>process-packageVersion</id>
                        <phase>process-sources</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <id>no-meta-inf-services</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <classifier>no-metainf-services</classifier>
                            <excludes>
                                <exclude>META-INF/services/**</exclude>
                            </excludes>
                            <archive>
                                <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                            </archive>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- configure the logging properties file to use when tests are run -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <systemPropertyVariables>
                        <java.util.logging.config.file>
                            src/test/resources/logging.properties
                        </java.util.logging.config.file>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
